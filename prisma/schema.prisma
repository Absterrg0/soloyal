// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Merchant{

  id                      String @id @default(uuid())
  name                    String @unique
  publicKey               String @unique
  loyaltyTokenMintAddress String @unique
  discountRate            Float
  rewardPolicy            RewardPolicy[]
  purchases               Purchase[]
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  @@map("merchants")
}

model RewardPolicy{

  id String @id @default(uuid())
  merchantId String
  merchant Merchant  @relation(fields: [merchantId], references: [id])
  duration Int
  ruleValue Int
  bonusPercentage Int?
  airdropAmount Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reward_policies")
}





model Customer{

  id String @id @default(uuid())
  walletAddress String @unique
  purchases Purchase[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("customers")
}


model Purchase{

  id String @id @default(uuid())
  customerId String
  customer Customer @relation(fields: [customerId], references: [id])
  merchantId String
  merchant Merchant @relation(fields: [merchantId], references: [id])
  amountPaid  Float
  tokenUsed TokenType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("purchases")
}


enum TokenType{
  SOL
  USDC
  USDT
  LTK
}